@use 'var';
@mixin centerFlex() {
  display: flex;
  align-items: center;
  justify-content: center;
}
*{
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body{
  width: 100%;
  height: 100%;
  background: var.$background;
  font-family: 'Roboto', sans-serif;
  position: fixed;
}

.container{
  display: flex;
  .bck{
    width: 70%;
    height: 100vh;
    overflow: hidden;
    background: url(../img-back.webp) no-repeat;
    background-size: cover;
    @include centerFlex();
    h1{
      color: var.$title;
      font-size: 3.5rem;
      font-family: 'THE BOLD FONT', 'Roboto', sans-serif;
      letter-spacing: 5px;
    }
  }
  .form-container{
    margin: 20px 33px 32px 16px ;
    padding: 50px 0px 50px 0px;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 30%);
    border-radius: 15px;
    h2{
      color: var.$text;
      text-align: center;
      font-size: 3.5rem;
      font-weight: 900;
    }
    form{
      margin: 60px 26px 32px 26px;
      @include centerFlex();
      flex-direction: column;

      .block{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        justify-content: end;
        gap: 30px;
        // width: 100%;
        color: var.$text;
        font-weight: 300;
        margin-bottom: 20px;
        .name, .email, .password{
          position: relative;
          label{
            position: absolute;
            width: 100%;
            height: 100%;
            pointer-events: none;
            left: 2%;
            font-size: 1.3rem;
            transition: all .3s ease;
            text-transform: uppercase;
          }
          input{
            transition: all .1s ease-in;
            width: 350px;
            height: 35px;
            padding: 0px 5px;
            background: transparent;
            border: none;
            border-bottom: 2px solid var.$inputBorderOpacity;
            outline: none;
            color: var.$text;
            border-radius: 5px;
            margin-bottom: 16px;
          }
          input:focus, input:valid {
            border-left: 2px solid;
            border-color: var.$inputColorFocus; 

          }
          input:focus + label, input:valid + label{
            transform: translateY(-35%);
            font-size: 1.1rem;
            color:var.$inputColorFocus;
          }
        }
        .sex{
          text-transform: uppercase;
          label{
            font-size: 1.5rem;
            font-weight: 300;

          }
         .inline{
          display: flex;
          p{
            font-size: 20px;
            font-weight: 200;
            // padding-left: 10px;
            span{
              margin-left: 5px;
            }
            input{
              margin-left: 10px;
              appearance: none;
              width: 16px;
              height: 16px;
              transition: all .1s ease-in;
              background: transparent;
              border: 1px solid var.$inputBorderOpacity;
              border-radius: 50%;
            }
            input:checked{
              background: var.$inputColorFocus;
            }
          }
         }
        }
      }
      .sub{
        text-align: center;
        button{
          width: 300px;
          height: 50px;
          border-radius: 10px;
          outline: none;
          background: var.$buttonBackground;
          border: none;
          border-bottom: 5px solid var.$buttonBorder;
          border-right: 3px solid var.$buttonBorder;
          color: var.$title;
          font-size: 1.5rem;
          transition: all .2s ease-in-out ;
          cursor: pointer;
        }
        button:hover{
          background: var.$buttonBackgroundHover;
          color: var.$text;
        }
        button:focus{
          background: var.$buttonBackgroundHover;
          color: var.$text;
        }
        p{
          font-weight: 200;
          font-size: 1.2rem;
          margin-top: 10px;
          color: var.$text;
          span{
            color: var.$inputColorFocus;
            transition: all .2s ease-in-out ;
            cursor: pointer;
          }
          span:hover{
            color: var.$inputBorderOpacity;
          }
        }
      }
    }
  }
}